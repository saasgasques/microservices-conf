// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.northwind.application.web;

import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.northwind.application.web.SuppliersItemJsonController;
import org.northwind.model.Supplier;
import org.northwind.service.api.SupplierService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect SuppliersItemJsonController_Roo_JSON {
    
    declare @type: SuppliersItemJsonController: @RestController;
    
    declare @type: SuppliersItemJsonController: @RequestMapping(value = "/api/suppliers/{supplier}", name = "SuppliersItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private SupplierService SuppliersItemJsonController.supplierService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param supplierService
     */
    @Autowired
    public SuppliersItemJsonController.new(SupplierService supplierService) {
        this.supplierService = supplierService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return SupplierService
     */
    public SupplierService SuppliersItemJsonController.getSupplierService() {
        return supplierService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param supplierService
     */
    public void SuppliersItemJsonController.setSupplierService(SupplierService supplierService) {
        this.supplierService = supplierService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Supplier
     */
    @ModelAttribute
    public Supplier SuppliersItemJsonController.getSupplier(@PathVariable("supplier") Long id) {
        Supplier supplier = supplierService.findOne(id);
        if (supplier == null) {
            throw new NotFoundException(String.format("Supplier with identifier '%s' not found",id));
        }
        return supplier;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param supplier
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> SuppliersItemJsonController.show(@ModelAttribute Supplier supplier) {
        return ResponseEntity.ok(supplier);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param supplier
     * @return UriComponents
     */
    public static UriComponents SuppliersItemJsonController.showURI(Supplier supplier) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(SuppliersItemJsonController.class).show(supplier))
            .buildAndExpand(supplier.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedSupplier
     * @param supplier
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> SuppliersItemJsonController.update(@ModelAttribute Supplier storedSupplier, @Valid @RequestBody Supplier supplier, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        supplier.setId(storedSupplier.getId());
        getSupplierService().save(supplier);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param supplier
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> SuppliersItemJsonController.delete(@ModelAttribute Supplier supplier) {
        getSupplierService().delete(supplier);
        return ResponseEntity.ok().build();
    }
    
}
