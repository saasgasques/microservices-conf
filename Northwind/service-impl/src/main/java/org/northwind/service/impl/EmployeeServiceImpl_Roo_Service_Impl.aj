// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.northwind.service.impl;

import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.northwind.model.CustomerOrder;
import org.northwind.model.Employee;
import org.northwind.model.PurchaseOrder;
import org.northwind.repository.EmployeeRepository;
import org.northwind.service.api.CustomerOrderService;
import org.northwind.service.api.PurchaseOrderService;
import org.northwind.service.impl.EmployeeServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect EmployeeServiceImpl_Roo_Service_Impl {
    
    declare @type: EmployeeServiceImpl: @Service;
    
    declare @type: EmployeeServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private EmployeeRepository EmployeeServiceImpl.employeeRepository;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private CustomerOrderService EmployeeServiceImpl.customerOrderService;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private PurchaseOrderService EmployeeServiceImpl.purchaseOrderService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param employeeRepository
     * @param customerOrderService
     * @param purchaseOrderService
     */
    @Autowired
    public EmployeeServiceImpl.new(EmployeeRepository employeeRepository, @Lazy CustomerOrderService customerOrderService, @Lazy PurchaseOrderService purchaseOrderService) {
        setEmployeeRepository(employeeRepository);
        setCustomerOrderService(customerOrderService);
        setPurchaseOrderService(purchaseOrderService);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return EmployeeRepository
     */
    public EmployeeRepository EmployeeServiceImpl.getEmployeeRepository() {
        return employeeRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employeeRepository
     */
    public void EmployeeServiceImpl.setEmployeeRepository(EmployeeRepository employeeRepository) {
        this.employeeRepository = employeeRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return CustomerOrderService
     */
    public CustomerOrderService EmployeeServiceImpl.getCustomerOrderService() {
        return customerOrderService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrderService
     */
    public void EmployeeServiceImpl.setCustomerOrderService(CustomerOrderService customerOrderService) {
        this.customerOrderService = customerOrderService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return PurchaseOrderService
     */
    public PurchaseOrderService EmployeeServiceImpl.getPurchaseOrderService() {
        return purchaseOrderService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param purchaseOrderService
     */
    public void EmployeeServiceImpl.setPurchaseOrderService(PurchaseOrderService purchaseOrderService) {
        this.purchaseOrderService = purchaseOrderService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employee
     * @return Map
     */
    public Map<String, List<MessageI18n>> EmployeeServiceImpl.validate(Employee employee) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employee
     * @param customerOrdersToAdd
     * @return Employee
     */
    @Transactional
    public Employee EmployeeServiceImpl.addToCustomerOrders(Employee employee, Iterable<Long> customerOrdersToAdd) {
        List<CustomerOrder> customerOrders = getCustomerOrderService().findAll(customerOrdersToAdd);
        employee.addToCustomerOrders(customerOrders);
        return getEmployeeRepository().save(employee);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employee
     * @param purchaseOrdersToAdd
     * @return Employee
     */
    @Transactional
    public Employee EmployeeServiceImpl.addToPurchaseOrders(Employee employee, Iterable<Long> purchaseOrdersToAdd) {
        List<PurchaseOrder> purchaseOrders = getPurchaseOrderService().findAll(purchaseOrdersToAdd);
        employee.addToPurchaseOrders(purchaseOrders);
        return getEmployeeRepository().save(employee);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employee
     * @param customerOrdersToRemove
     * @return Employee
     */
    @Transactional
    public Employee EmployeeServiceImpl.removeFromCustomerOrders(Employee employee, Iterable<Long> customerOrdersToRemove) {
        List<CustomerOrder> customerOrders = getCustomerOrderService().findAll(customerOrdersToRemove);
        employee.removeFromCustomerOrders(customerOrders);
        return getEmployeeRepository().save(employee);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employee
     * @param purchaseOrdersToRemove
     * @return Employee
     */
    @Transactional
    public Employee EmployeeServiceImpl.removeFromPurchaseOrders(Employee employee, Iterable<Long> purchaseOrdersToRemove) {
        List<PurchaseOrder> purchaseOrders = getPurchaseOrderService().findAll(purchaseOrdersToRemove);
        employee.removeFromPurchaseOrders(purchaseOrders);
        return getEmployeeRepository().save(employee);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employee
     * @param customerOrders
     * @return Employee
     */
    @Transactional
    public Employee EmployeeServiceImpl.setCustomerOrders(Employee employee, Iterable<Long> customerOrders) {
        List<CustomerOrder> items = getCustomerOrderService().findAll(customerOrders);
        Set<CustomerOrder> currents = employee.getCustomerOrders();
        Set<CustomerOrder> toRemove = new HashSet<CustomerOrder>();
        for (Iterator<CustomerOrder> iterator = currents.iterator(); iterator.hasNext();) {
            CustomerOrder nextCustomerOrder = iterator.next();
            if (items.contains(nextCustomerOrder)) {
                items.remove(nextCustomerOrder);
            } else {
                toRemove.add(nextCustomerOrder);
            }
        }
        employee.removeFromCustomerOrders(toRemove);
        employee.addToCustomerOrders(items);
        // Force the version update of the parent side to know that the parent has changed
        // because it has new books assigned
        employee.setVersion(employee.getVersion() + 1);
        return getEmployeeRepository().save(employee);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employee
     * @param purchaseOrders
     * @return Employee
     */
    @Transactional
    public Employee EmployeeServiceImpl.setPurchaseOrders(Employee employee, Iterable<Long> purchaseOrders) {
        List<PurchaseOrder> items = getPurchaseOrderService().findAll(purchaseOrders);
        Set<PurchaseOrder> currents = employee.getPurchaseOrders();
        Set<PurchaseOrder> toRemove = new HashSet<PurchaseOrder>();
        for (Iterator<PurchaseOrder> iterator = currents.iterator(); iterator.hasNext();) {
            PurchaseOrder nextPurchaseOrder = iterator.next();
            if (items.contains(nextPurchaseOrder)) {
                items.remove(nextPurchaseOrder);
            } else {
                toRemove.add(nextPurchaseOrder);
            }
        }
        employee.removeFromPurchaseOrders(toRemove);
        employee.addToPurchaseOrders(items);
        // Force the version update of the parent side to know that the parent has changed
        // because it has new books assigned
        employee.setVersion(employee.getVersion() + 1);
        return getEmployeeRepository().save(employee);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employee
     */
    @Transactional
    public void EmployeeServiceImpl.delete(Employee employee) {
        // Clear bidirectional one-to-many parent relationship with CustomerOrder
        for (CustomerOrder item : employee.getCustomerOrders()) {
            item.setEmployee(null);
        }
        
        // Clear bidirectional one-to-many parent relationship with PurchaseOrder
        for (PurchaseOrder item : employee.getPurchaseOrders()) {
            item.setEmployee(null);
        }
        
        getEmployeeRepository().delete(employee);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Employee> EmployeeServiceImpl.save(Iterable<Employee> entities) {
        return getEmployeeRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void EmployeeServiceImpl.delete(Iterable<Long> ids) {
        List<Employee> toDelete = getEmployeeRepository().findAll(ids);
        getEmployeeRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Employee
     */
    @Transactional
    public Employee EmployeeServiceImpl.save(Employee entity) {
        return getEmployeeRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Employee
     */
    public Employee EmployeeServiceImpl.findOne(Long id) {
        return getEmployeeRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Employee
     */
    public Employee EmployeeServiceImpl.findOneForUpdate(Long id) {
        return getEmployeeRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Employee> EmployeeServiceImpl.findAll(Iterable<Long> ids) {
        return getEmployeeRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Employee> EmployeeServiceImpl.findAll() {
        return getEmployeeRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long EmployeeServiceImpl.count() {
        return getEmployeeRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Employee> EmployeeServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getEmployeeRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Employee> EmployeeServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getEmployeeRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Employee> EmployeeServiceImpl.getEntityType() {
        return Employee.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> EmployeeServiceImpl.getIdType() {
        return Long.class;
    }
    
}
