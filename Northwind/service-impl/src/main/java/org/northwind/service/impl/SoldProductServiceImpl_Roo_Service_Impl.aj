// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.northwind.service.impl;

import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.northwind.model.SoldProduct;
import org.northwind.repository.SoldProductRepository;
import org.northwind.service.impl.SoldProductServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect SoldProductServiceImpl_Roo_Service_Impl {
    
    declare @type: SoldProductServiceImpl: @Service;
    
    declare @type: SoldProductServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private SoldProductRepository SoldProductServiceImpl.soldProductRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param soldProductRepository
     */
    @Autowired
    public SoldProductServiceImpl.new(SoldProductRepository soldProductRepository) {
        setSoldProductRepository(soldProductRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return SoldProductRepository
     */
    public SoldProductRepository SoldProductServiceImpl.getSoldProductRepository() {
        return soldProductRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param soldProductRepository
     */
    public void SoldProductServiceImpl.setSoldProductRepository(SoldProductRepository soldProductRepository) {
        this.soldProductRepository = soldProductRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param soldproduct
     * @return Map
     */
    public Map<String, List<MessageI18n>> SoldProductServiceImpl.validate(SoldProduct soldproduct) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param soldProduct
     */
    @Transactional
    public void SoldProductServiceImpl.delete(SoldProduct soldProduct) {
        getSoldProductRepository().delete(soldProduct);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<SoldProduct> SoldProductServiceImpl.save(Iterable<SoldProduct> entities) {
        return getSoldProductRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void SoldProductServiceImpl.delete(Iterable<Long> ids) {
        List<SoldProduct> toDelete = getSoldProductRepository().findAll(ids);
        getSoldProductRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return SoldProduct
     */
    @Transactional
    public SoldProduct SoldProductServiceImpl.save(SoldProduct entity) {
        return getSoldProductRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return SoldProduct
     */
    public SoldProduct SoldProductServiceImpl.findOne(Long id) {
        return getSoldProductRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return SoldProduct
     */
    public SoldProduct SoldProductServiceImpl.findOneForUpdate(Long id) {
        return getSoldProductRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<SoldProduct> SoldProductServiceImpl.findAll(Iterable<Long> ids) {
        return getSoldProductRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<SoldProduct> SoldProductServiceImpl.findAll() {
        return getSoldProductRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long SoldProductServiceImpl.count() {
        return getSoldProductRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<SoldProduct> SoldProductServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getSoldProductRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<SoldProduct> SoldProductServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getSoldProductRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<SoldProduct> SoldProductServiceImpl.getEntityType() {
        return SoldProduct.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> SoldProductServiceImpl.getIdType() {
        return Long.class;
    }
    
}
